package cn.whu.wy.osgov.service;

import cn.whu.wy.osgov.dto.ArtifactVulnerabilityDto;
import cn.whu.wy.osgov.entity.ArtifactVulnerability;
import cn.whu.wy.osgov.entity.Vulnerability;
import cn.whu.wy.osgov.entity.artifact.Artifact;
import cn.whu.wy.osgov.repository.ArtifactRepository;
import cn.whu.wy.osgov.repository.ArtifactVulnerabilityRepository;
import cn.whu.wy.osgov.repository.VulnerabilityRepository;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import javax.sql.DataSource;
import java.util.ArrayList;
import java.util.List;

/**
 * @author WangYong
 * Date 2022/08/24
 * Time 18:30
 */
@Service
public class ArtifactVulnerabilityService {

    private final JdbcTemplate jdbcTemplate;
    private final ArtifactVulnerabilityRepository artifactVulnerabilityRepository;
    private final ArtifactRepository artifactRepository;
    private final VulnerabilityRepository vulnerabilityRepository;

    public ArtifactVulnerabilityService(DataSource dataSource, ArtifactVulnerabilityRepository artifactVulnerabilityRepository, ArtifactRepository artifactRepository, VulnerabilityRepository vulnerabilityRepository) {
        this.artifactVulnerabilityRepository = artifactVulnerabilityRepository;
        this.artifactRepository = artifactRepository;
        this.vulnerabilityRepository = vulnerabilityRepository;
        this.jdbcTemplate = new JdbcTemplate(dataSource);
    }


    /**
     * TODO 需要实现分页，目前数据量小，暂不考虑。全部返回，由前端进行分页
     */
    public List<ArtifactVulnerabilityDto> get() {
        String sql = "SELECT a.id AS artifact_id, a.name AS artifact_name, v.id AS vulnerability_id, v.name AS vulnerability_name, " +
                "v.level AS level " +
                "FROM artifact AS a, vulnerability AS v, artifact_vulnerability AS av " +
                "WHERE a.id = av.artifact_id AND v.id = av.vulnerability_id";
        return jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(ArtifactVulnerabilityDto.class));
    }

    public List<ArtifactVulnerabilityDto> queryByArtifactName(String keyword) {
        String sql = "SELECT a.id AS artifact_id, a.name AS artifact_name, v.id AS vulnerability_id, v.name AS vulnerability_name, " +
                "v.level AS level " +
                "FROM artifact AS a, vulnerability AS v, artifact_vulnerability AS av " +
                "WHERE a.id = av.artifact_id AND v.id = av.vulnerability_id AND a.name LIKE '%" + keyword + "%'";
        return jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(ArtifactVulnerabilityDto.class));
    }

    public List<ArtifactVulnerabilityDto> queryByVulnerabilityName(String keyword) {
        String sql = "SELECT a.id AS artifact_id, a.name AS artifact_name, v.id AS vulnerability_id, v.name AS vulnerability_name, " +
                "v.level AS level " +
                "FROM artifact AS a, vulnerability AS v, artifact_vulnerability AS av " +
                "WHERE a.id = av.artifact_id AND v.id = av.vulnerability_id AND v.name LIKE '%" + keyword + "%'";
        return jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(ArtifactVulnerabilityDto.class));
    }

    /**
     * 这种方案网络IO次数太多；也没有SQL直观
     */
    @Deprecated
    public List<ArtifactVulnerabilityDto> queryByArtifactName2(String keyword) {
        List<ArtifactVulnerabilityDto> dtos = new ArrayList<>();

        List<Artifact> artifacts = artifactRepository.queryLike("name", keyword);
        artifacts.forEach(a -> {
            List<ArtifactVulnerability> avList = artifactVulnerabilityRepository.queryEqual("artifact_id", String.valueOf(a.getId()));
            avList.forEach(av -> {
                Vulnerability v = vulnerabilityRepository.findById(av.getVulnerabilityId());
                dtos.add(ArtifactVulnerabilityDto.builder()
                        .artifactId(a.getId())
                        .artifactName(a.getName())
                        .vulnerabilityId(v.getId())
                        .vulnerabilityName(v.getName())
                        .build());
            });
        });
        return dtos;
    }

}
